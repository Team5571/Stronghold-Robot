// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5571.StrongholdRobot.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc5571.StrongholdRobot.Constants;
import org.usfirst.frc5571.StrongholdRobot.Robot;
import org.usfirst.frc5571.StrongholdRobot.RobotMap;
import org.usfirst.frc5571.StrongholdRobot.subsystems.Pneumatics;

/**
 *
 */

/**
*
*/
public class AutoDriveCommand extends Command {
	Timer timer;
	double autoMagnitude;
	double autoDirection;
	double autoRotation;
	double autoDriveDuration;

	public AutoDriveCommand() {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);
		requires(Robot.driveTrain);
	}

	//public AutoDriveCommand(double magnitude, double direction, double rotation, double duration) {
	public AutoDriveCommand(double magnitude, double rotation, double duration) {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);
		requires(Robot.driveTrain);
		timer = new Timer();
		autoMagnitude = magnitude;
		//autoDirection = direction;
		autoRotation = rotation;
		autoDriveDuration = duration;
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		timer.reset();
		timer.start();
		RobotMap.driveTrainRobotDrive21.arcadeDrive(autoMagnitude, autoRotation);
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return (timer.get() > autoDriveDuration);
	}
	// Called once after isFinished returns true
	protected void end() {
		RobotMap.driveTrainRobotDrive21.arcadeDrive(0,0);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		this.end();
	}
}

