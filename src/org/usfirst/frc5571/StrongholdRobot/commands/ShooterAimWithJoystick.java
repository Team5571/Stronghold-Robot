// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5571.StrongholdRobot.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc5571.StrongholdRobot.Constants;
import org.usfirst.frc5571.StrongholdRobot.Robot;
import org.usfirst.frc5571.StrongholdRobot.RobotMap;
import org.usfirst.frc5571.StrongholdRobot.Xbox360Controller;

/**
 *
 */
public class ShooterAimWithJoystick extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private double aimInput;
	private int POVButton;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ShooterAimWithJoystick() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
//    protected void execute() { 
//    	POVButton = Robot.oi.getDriveJoystick().getPOV(); // slider on Logitech
//    
//    	if (POVButton == 0)
//    		aimInput = 1;
//    	else if (POVButton == 180)
//    		aimInput = -1;
//    	else
//    		aimInput =0;
//    	SmartDashboard.putNumber("POV", aimInput);
//    	Robot.shooter.aimModePercentVBus();
//    	RobotMap.shooterAimingActuator.set(aimInput);
//    
    protected void execute() { 
    	Xbox360Controller xbox;
    	xbox = Robot.oi.getXbox();
    	double aimInput = xbox.getRawAxis(Constants.XBOX_SHOOTING_ANGLE_JOYSTICK) * -1.0; // Back on stick is up.
    	Robot.shooter.aimModePercentVBus();
    	RobotMap.shooterAimingActuator.set(Robot.shooter.applyAimingActuatorDeadZone(aimInput));
    }
    
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	RobotMap.shooterAimingActuator.set(0);
    }
}
